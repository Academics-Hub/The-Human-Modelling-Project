{"path":".obsidian/plugins/text-extractor/cache/f841a9278747cb37678a47befdb08fdb.json","text":"ELEN3014 Biomedical Signals, Systems and Control Fourier Transform in the Discrete Domain – Part a 1 since Sind i MA rnn n.tt i g time domain frequencydomain 2 DTFT-Discrete-Time Fourier Transform DFT- Discrete Fourier Transform FFT-Fast Fourier Transform Acronyms only I axis discrete both axis discrete 3 Discrete Time Fourier Transform -DTFT ◼ The Fourier series and Fourier transforms operate on continuous signal in the time domain. ◼ Continuous signals are converted into discrete signals by using an analog to digital converter. ◼ This conversion can be modeled by multiplication of the continuous signal by an impulse train (impulse sampling). ( ) ( ) ( ) s n s nTttxtx −=   −=   = ( ) s n nTt −   −=  )( tx ( ) ( ) s n nTttx −   −=  top i ◼ The sampled signal is thus: 4 () ()() xt xt t nT s n s = − =−    Where Ts is the sampling period. Applying the definition the Fourier Transform on x s (t ) is () ()() X xt t nTe dt s n s jt    = − =−  −  −  DTFT-cont’d 5 ( ) ( ) ( ) ( ) ( ) ( ) ( ) ( ) s nTj n s n s tj n tj s tj s n s enTxdtnTtetx dtenTttxdtenTttxX     −  −=  −=  − −  −=  − −−  −  −=      =−= =−=−= The sifting property of delta function: In our case, , and  = nTs . So: ( ) ( ) ( ) rdtttr =−   − ( ) ( ) tj etxtr − = DTFT-cont’d () ()( ) X xt t nTe dt s n s j t    = − =−  −  −  sifting not shifting 6 DTFT-cont’d Let x(nTs ) is replaced with x[n ] and using a change of variables we define the resulting expression is the Discrete Time Fourier transform (DTFT):   −= − = n nj enxX ][)( T s = dtetxx t j   − − =  )()( Compare to the continuous FT: ( ) ( ) s nTj n ss enTxX   −  −=  = 7 DTFT-cont’d The spectrum in units is periodic in frequency with a period of 2*pi : X xne xne e xne X jn n jn j n n jn n ( ) [] [] [] ( ) ( )      += = = = − + =−  − − =−  − =−     2 2 2    X X() ( )=+2  2  -> the “replicated spectrum” we discussed in chapter 2 exists here too!  8 DTFT-cont’d ➢ The replicated spectrum is related to the Nyquist rate: ➢The DTFT maps the real frequency to which is periodic with a period of .  = T s 2  ➢there are positive and negative frequencies, thus it’s more convenient to define the range from to . ➢If the highest frequency in our signal is ➢The sampling period is related to the sample rate by Ts , thus which is in agreement with the Nyquist rate. −    smms TT === ; ms ms Ts      2 2 === m  9 IDTFT – Inverse DTFT As with the Fourier transform, there is an inverse Discrete Time Fourier transform: Fourier Transform dte)t(x)(x t j   − −  = Discrete Time Fourier Transform   −= −  = n j n e)n(x)(x Inverse Fourier Transform Inverse Discrete Time Fourier Transform =   −  de)(x2 1)t(x t j =   −  de)(x2 1)n(x )n( j 10 DFT-Discrete Fourier Transformation ➢ DTFT is not applicable to DSP because it requires an infinite number of samples and the frequency domain representation is a continuous function – impossible to represent exactly in digital hardware. ➢ Two procedures are required to make the DTFT applicable to DSP. 1. Limit the number of samples in the time domain 2. Sample the frequency domain to make it discrete. Recall the DTFT: X xne jn n ( ) []  = − =−   Instead of taking an infinite number of samples in the time domain, we take N samples. The truncated DTFT is then  − = − = 1 0 ][)( N n jn enxX 11 Time Windowing Process truncated DTFT n x(n) w(n) lnght-L rectangular window L-1 L-samples (L-1)Ts (sec) after windowing   −= − = n jn L enxnwX ][][)(  − = − = 1 0 ][)( L n jn L enxX 12 Example – The effect of Windowing ( ) ( ) ( ) ( ) ( ) ( ) ( ) ( ) ( ) ( ) ( ) ( ) 2211 2 2 2 1 2211 2 2 2 1 2211 2 2 2 1 10 , - , 22 , , 21 21 21 −+−= −+= −+−= −+= −+−= −+= WAWAX LneAeAnx AAX neAeAnx ffAffAfX teAeAtx L nTfnTf L nTfnTf tfjtfj ss ss      analog sampled windowed Fourier Transform DTFT Trancated DTFT 13 Spectra of the windowed double sinusoids Example (cont.) A1(−  1) A2( −  2)  1  2 1A W( −  1) A2W( −  2) ( ) ( ) ( ) ( ) ( ) 2211 2 2 2 1 2 2 2 1 10 , , 21 21 −+−= −+= −+= WAWAX LneAeAnx teAeAtx L nTfnTf L tfjtfj ss   14 Example (cont.) ( ) ( ) ( ) 2211 −+−= WAWAX L A1 (−  1) A2 ( −  2)  1 1AW( −  1) A2W( −  2)  2  1 3 ( ) ( ) ( ) 3311 −+−= WAWAX L 15 Df-frequency separation abs(f1-f2 ) or D  =abs( 1−  2) D = D  =DD=DD   2 2 f f L L f ff L s s ww The resolvability condition that the two sinusoids appear as two distinct ones is: The resolvability condition Dw D A1(−  1) A2( −  2)  1  2 1A W( −  1) A2W( −  2) 16 Example: A signal consisting of four sinusoids of frequencies of 1,1.5,2.5 and 2.75 kHz Is sampled at a rate 10kHz. What is the minimum number of samples that should be collected for the frequency spectrum to exhibit four distinct peaks at these frequencies? Solution: The smallest frequency separation that must be resolved by the DFT is: D D f kHz L f f samples s min min . . . . =−=  = = 27525 025 10 025 40 n I osmyallestseparation freqi.e If min it i t t Ts Is Eazy Tsolvabilitycondition 17 Sample the continuous frequency It is common practice to take the same number of samples in the frequency domain as there were in the time domain. So the sampled frequency domain of the truncated DTFT will be () D   = = = − −  2 2 0 1 2 N X kN xne n N j knN/ where k=0,1,2,3,4,……..,N-1 Since the only variable in is , the truncated DTFT is 2 kN k Xk xne k N j knN n N [] [] , / = = − − = −  2 0 1 1  where 0, 1, 2, ..., Tetley TG y HE is a constant how always digital what wewant easily transformable convertible 18 This form is the discrete Fourier transform (DFT) of x(n) Xk xne k N j knN n N [] [] , / = = − − = −  2 0 1 1  where 0, 1, 2, ..., DFT-equation The Inverse Discrete Fourier Transform (IDFT) xn N Xke n N j knN k N [] [] , / = = − = −  1 1 2 0 1  where 0, 1, 2, ..., I ELEN3014 Biomedical Signals, Systems and Control Fourier Transform in the Discrete Domain- part b 1920 Discrete Fourier transform (DFT) Xk xne k N j knN n N [] [] , / = = − − = −  2 0 1 1  where 0, 1, 2, ..., and Inverse Discrete Fourier Transform (IDFT) xn N Xke n N j knN k N [] [] , / = = − = −  1 1 2 0 1  where 0, 1, 2, ..., 21 The DFT pair is applicable to DSP because they are both discrete and the sequence lengths are finite. We N j N = −2 / Thus, the DFT pair is written: Xk xnW Nkn n N [] []= = −  0 1 xnNXkW Nkn k N [] []= − = −  1 0 1 DFT-equation IDFT-equation 22 Practical Considerations ❖ Standard DFT ❖ An example of an 8 point DFT ❖ Writing this out for each value of n 10,)()( 1 0 −=  − = NkWkXkX N n knNnN 7,...,2,1,0,)()( 7 0 88 ==  = kWkXkX n kn n 7,...,1,0,)7(.......)1()0()( 7 8 1 8 0 88 =+++= kWxWxWxkX kkk ⚫Total number of multiplications required: 8 * 8 = 64 ⚫each multiplication is complex 23 FFT-Fast Fourier Transformation kr N N r N r rk Nn WrxWrxkX )12( 1 2 0 1 2 0 2 )12()2()( + − = − =   ++= ◼ Standard DFT 10,)()( 1 0 −=  − = NkWkXkX N n knNnN ❑ FFT concept: DFT of length N can be rewritten as the sum of two DFT of length N/2 [x(0),x(1),x(2),x(3),x(4),x(5),x(6),x(7)] [x(0),x(2),x(4),x(6)] [x(1),x(3),x(5),x(7)] Example for N=8: Symmetry Property Periodicity Property k N 2/Nk N WW −= + k N Nk N WW = + 4 0 8 0 1 W W = = 8 1 0707 0707 W j= −. . 4 1 8 2 W W j= =− 8 3 0707 0707 W j=− −. . 4 2 8 4 1 W W = =− 8 5 0707 0707 W j=− +. . 4 3 8 6 W W j= = 8 7 0707 0707 W j= +. . kr N N r N r rk Nn WrxWrxkX )12( 1 2 0 1 2 0 2 )12()2()( + − = − =   ++= 2/N )2/N 2(j)2N 2(j2 N WeeW === −− and MINE 25 FFT Splitting the DFT in two: Using power properties:  − = − = ++= 12 N 0r rk2 N 12 N 0r k N rk2 NN )W).(1r2(xW)W).(r2(x)k(X   − = − = ++= 12 N 0r 12 N 0r rk 2N k N rk 2Nn W)1r2(xWW)r2(x)k(X  − = + − = ++= 12 N 0r k)1r2( N 12 N 0r rk2 NN W).1r2(xW).r2(x)k(X And manipulation with the “Twiddles” I symmetry property 26 Computation Time Savings ❖For an 8-point FFT, 42 + 42 + 4 = 36 multiplications, saving 64 - 36 = 28 multiplications ❖For 1000 point FFT, 5002 + 5002 + 500 = 50,500 multiplications, saving 1,000,000 - 50,500 = 945,000 multiplications ❖Time savings assume 50ns cycle time 8-point FFT saves 1.2 ms 1000-point FFT saves 47.25ms  − = − = ++= 12 N 0r rk 2/N k N 12 N 0r rk 2/NN W)1r2(xWW)r2(x)k(x 27 Iterative FFT [x(0),x(1),x(2),x(3),x(4),x(5),x(6),x(7)] [x(0),x(2),x(4),x(6)] [x(1),x(3),x(5),x(7)] [x(0),x(4)] [x(2),x(6)] [x(1),x(5)] [x(3),x(7)] [x(0)] [x(4)] [x(2)] [x(6)] [x(1)] [x(5)] [x(3)] [x(7)] 28 Decimation in Time ➢ Splitting the original series into two is called decimation in time or Radix-2 decimation n = {0, 1, 2, 3, 4, 5, 6, 7} n = { 0, 2, 4, 6 } and { 1, 3, 5, 7 } for a series of length N = 8 ➢Decimate once: ➢ Decimate again: n = { 0, 4 } { 2, 6 } and { 1, 5 } { 3, 7 } ❖ The result is a savings of N2 – (N/2)log2N multiplications 1024 point DFT = 1,048,576 multiplications 1024 point FFT = 5120 multiplication WE E logan Practical FFT 29 For the lowest decimation, where 2 points sum is performed (2-points DFT), there are only n=0,1 and k=0,1 in the sums: [x(0),x(2)] [x(0)] [x(2)] ( ) ( ) ( ) ( ) ( ) ( ) )2()0()2()0(1221 )2()0()2()0(1220 1 2 1 2 2 0 1* 2 2 1 2 1* 2 2 1 2 2 0 0 2 1 2 2 0 0* 2 2 0 2 0* 2 2 1 2 2 0 xxxWxWrxWWrxkX xxxWxWrxWWrxkX r rr r r rr r −=−=++== +=+=++==   − = − = − = − =  − = − = ++= 1 2 N 0r rk2/N k N 1 2 N 0r rk2/NN W)1r2(xWW)r2(x)k(x Each of the “half sums” has only 1 element and the two sums are either added or subtracted, due to the “twiddle” value (1 or -1) 30 2-points DFT x(0) x(2) x(0)+x(2) x(0)-x(2) The butterfly diagram A 2-points DFT 31 () () () () () () () () k k Nk k k Nk N r rk Nk rk N N r k N r rk N k N rk N N r N r rk N k N rk N N r BWANkX BWAkX WrxB WrxA WrxWWrxNkX WrxWWrxkX −=   + += += = +−=   + ++=     − = − = − = − = − = − = 2 12 2 1222 122 12 0 2 2 12 0 12 0 22 12 0 12 0 22 12 0Generalization 4 0 8 0 1 W W = = 8 1 0 707 0 707 W j= −. . 4 1 8 2 W W j= =− 8 3 0 707 0 707 W j=− −. . 4 2 8 4 1 W W = =− 8 5 0 707 0 707 W j=− +. . 4 3 8 6 W W j= = 8 7 0 707 0 707 W j= +. . 32 2-points DFT 2-points DFT x(0) x(3) x(2) x(1) x(0)+x(2) x(0)-x(2) x(1)+x(3) x(1)-x(3) 4-Point FFT SPOT THE BUTTERFLY ? X(0) X(1) X(2) X(3) K’s = frequency indices =A0 =A1 =B0 =B1 50 N 4 a periodic W j numbering D clockwise Wnt e K joint k y w wi we see the mm property here I I only have to do t calculations as the other half will Wj j be symmetric N oslo ill 2 pics Todd 1 107,12 1111,43 q.es IE.atnt what we can diagram considering the generilisation X lol Aot WgBo AotBo FXAMPLEI X2 Ao WY Bo Ao Bo given sin 1 1,23 perform FFT to obtain the spectrum plot X k No Nil 1127,113 XII A WIB A IB plot Niall to get rid of complex values 3 a Wh B AitjB Decim ation in time vermin I III Ii.IE Road Galica cnzz.jp I.gBo t axck Xk siltid lit M if 1 1141 15 im Plot of the FFT of xlr fit shift make sym m etric Iterative FFT 33 1) Take the elements in pairs, compute the DFT of each pair, (using one butterfly operation), and replace the pair with its DFT 2) Take these 2 DFT’s in pairs and compute the DFT of the four vector elements . . 3) Take two (n/2)- element DFT’s and combine them using n/2 butterfly operations into the final n-element DFT ❖Decimation simplifies mathematics but there are more twiddle factors to calculate ❖ A practical FFT incorporates these extra factors into the algorithm 34 8-Point FFT 2-points DFT 2-points DFT 2-points DFT 2-points DFT x(0) x(4) x(2) x(6) x(1) x(5) x(3) x(7) x(0)+x(4) x(0)-x(4) X(2)+x(6) x(2)-x(6) x(1)+x(5) x(1)-x(5) x(3)+x(7) x(3)-x(7) W 4 0 W 4 1 W 4 2 W 4 3 W 4 0 W 4 1 W 4 2 W 4 3 A 0 A 1 A 2 A 3 B 0 B 1 B 2 B 3 W 8 0 W 8 1 W 8 2 W 8 3 W 8 7 W 8 6 W 8 5 W 8 4 X 0 X 1 X 2 X 3 X 4 X 5 X 7 X 6 35 a real butterfly ELEN3014 Biomedical Signals, Systems and Control 36 Exercises 37 Example : Sample and perform an FFT on the signal below, where fs=10kHz and Draw the resulting spectrum. 2 1 0.10 Time [ms]0.2 0.3 38 The sampling period is 1/10kHz = 0,1 ms, so the sampled values are at times t=(0,0.1,0.2,0.3)ms , therefore x(n) = [2 2 2 1 ] Solution : 2 1 0.10 Time [ms]0.2 0.3 39 x(n) = [2 2 2 1 ] The FFT is performed using the butterfly diagram: 2-points DFT 2-points DFT 2 1 2 2 4 0 3 1 1 -j -1 j 7 -j 1 j Solution :Solution (cont.) 40 7 1 -1 2 k0 1 X(k)","libVersion":"0.2.2","langs":""}